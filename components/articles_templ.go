// Code generated by templ@v0.2.334 DO NOT EDIT.

package components

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import "context"
import "io"
import "bytes"

import "github.com/ad-ops/realworld-pocketbase/models"

func Articles(articles []models.Article) templ.Component {
	return templ.ComponentFunc(func(ctx context.Context, w io.Writer) (err error) {
		templBuffer, templIsBuffer := w.(*bytes.Buffer)
		if !templIsBuffer {
			templBuffer = templ.GetBuffer()
			defer templ.ReleaseBuffer(templBuffer)
		}
		ctx = templ.InitializeContext(ctx)
		var_1 := templ.GetChildren(ctx)
		if var_1 == nil {
			var_1 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		for _, article := range articles {
			_, err = templBuffer.WriteString("<div class=\"article-preview\"><div class=\"article-meta\"><a href=\"/profile/albert-pai\"><img src=\"http://i.imgur.com/N4VcUeJ.jpg\"></a><div class=\"info\"><a href=\"/profile/albert-pai\" class=\"author\">")
			if err != nil {
				return err
			}
			var_2 := `Albert Pai`
			_, err = templBuffer.WriteString(var_2)
			if err != nil {
				return err
			}
			_, err = templBuffer.WriteString("</a><span class=\"date\">")
			if err != nil {
				return err
			}
			var_3 := `January 20th`
			_, err = templBuffer.WriteString(var_3)
			if err != nil {
				return err
			}
			_, err = templBuffer.WriteString("</span></div><button class=\"btn btn-outline-primary btn-sm pull-xs-right\"><i class=\"ion-heart\"></i>")
			if err != nil {
				return err
			}
			var_4 := `32`
			_, err = templBuffer.WriteString(var_4)
			if err != nil {
				return err
			}
			_, err = templBuffer.WriteString("</button></div><a href=\"")
			if err != nil {
				return err
			}
			var var_5 templ.SafeURL = templ.URL(article.Slug)
			_, err = templBuffer.WriteString(templ.EscapeString(string(var_5)))
			if err != nil {
				return err
			}
			_, err = templBuffer.WriteString("\" class=\"preview-link\"><h1>")
			if err != nil {
				return err
			}
			var_6 := `The song you won't ever stop singing. No matter how hard you try.`
			_, err = templBuffer.WriteString(var_6)
			if err != nil {
				return err
			}
			_, err = templBuffer.WriteString("</h1><p>")
			if err != nil {
				return err
			}
			var_7 := `This is the description for the post.`
			_, err = templBuffer.WriteString(var_7)
			if err != nil {
				return err
			}
			_, err = templBuffer.WriteString("</p><span>")
			if err != nil {
				return err
			}
			var_8 := `Read more...`
			_, err = templBuffer.WriteString(var_8)
			if err != nil {
				return err
			}
			_, err = templBuffer.WriteString("</span><ul class=\"tag-list\"><li class=\"tag-default tag-pill tag-outline\">")
			if err != nil {
				return err
			}
			var_9 := `realworld`
			_, err = templBuffer.WriteString(var_9)
			if err != nil {
				return err
			}
			_, err = templBuffer.WriteString("</li><li class=\"tag-default tag-pill tag-outline\">")
			if err != nil {
				return err
			}
			var_10 := `implementations`
			_, err = templBuffer.WriteString(var_10)
			if err != nil {
				return err
			}
			_, err = templBuffer.WriteString("</li></ul></a></div>")
			if err != nil {
				return err
			}
		}
		if !templIsBuffer {
			_, err = templBuffer.WriteTo(w)
		}
		return err
	})
}
